"""
Django settings for groundup project.

Generated by 'django-admin startproject' using Django 1.8.7.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

import datetime
from . import local_settings

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os

try:
    BASE_DIR = local_settings.BASE_DIR
except:
    BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECRET KEY: This must be set in local_settings.py
SECRET_KEY = local_settings.SECRET_KEY

# DEBUG: This should be overriden in local_settings.py
try:
    DEBUG = local_settings.DEBUG
except:
    DEBUG = True

if DEBUG == False:
    ALLOWED_HOSTS = local_settings.ALLOWED_HOSTS
else:
    ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.postgres',
    'grappelli.dashboard',
    'grappelli',
    'filebrowser',
    'django.contrib.admin',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sitemaps',
    'django.contrib.sites',
    'django.contrib.flatpages',
    'django.contrib.redirects',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'haystack',
    'newsroom',
    'payment',
    'socialmedia',
    'republisher',
    'clearcache',
    'blocks',
    'letters',
    'gallery',
    'pgsearch',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.flatpages.middleware.FlatpageFallbackMiddleware',
    'django.contrib.redirects.middleware.RedirectFallbackMiddleware',
)

ROOT_URLCONF = 'groundup.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [ os.path.join(BASE_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

AUTHENTICATION_BACKENDS = (
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
)

ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_REQUIRED = True
#ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = True
#ACCOUNT_EMAIL_VERIFICATION = "mandatory"
LOGIN_REDIRECT_URL = "/user/"

WSGI_APPLICATION = 'groundup.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases
# This should be overriden in local_settings.py

try:
    DATABASES = local_settings.DATABASES
except:
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
        }
    }


# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Africa/Johannesburg'

USE_I18N = True

USE_L10N = True

USE_TZ = True

SITE_ID = 1


# CACHES: This should be overriden in local_settings.py

try:
    CACHES = local_settings.CACHES
except:
    CACHES = {
        'default': {
            'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
            'LOCATION': '/var/tmp/django_cache',
            'KEY_PREFIX': 'gu',
        }
    }


# These should be overriden in local_settings.py
STATIC_URL = '/static/'
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media/')
STATIC_ROOT = os.path.join(BASE_DIR, 'static/')

FILEBROWSER_DIRECTORY = "uploads/"

FILEBROWSER_EXTENSIONS = {
    'Image': ['.jpg', '.jpeg', '.gif', '.png', '.tif', '.tiff'],
    'Document': ['.pdf', '.doc', '.rtf', '.txt', '.xls', '.csv'],
    'Video': ['.mov', '.wmv', '.mpeg', '.mpg', '.avi', '.rm'],
    'Audio': ['.mp3', '.mp4', '.wav', '.aiff', '.midi', '.m4p']
}

FILEBROWSER_SELECT_FORMATS = {
    'file': ['Image', 'Document', 'Video', 'Audio'],
    'image': ['Image'],
    'document': ['Document'],
    'media': ['Video', 'Audio'],
}

FILEBROWSER_VERSIONS_BASEDIR = '_versions'

FILEBROWSER_MAX_UPLOAD_SIZE = 10485760

FILEBROWSER_NORMALIZE_FILENAME = True

FILEBROWSER_CONVERT_FILENAME = False

FILEBROWSER_OVERWRITE_EXISTING = False

FILEBROWSER_VERSIONS = {
    'admin_thumbnail': {'verbose_name': 'Admin Thumbnail',
                        'width': 60, 'height': 60, 'opts': 'crop'},
    'thumbnail': {'verbose_name': 'Thumbnail (1 col crop)',
                  'width': 60, 'height': 60, 'opts': 'crop'},
    'small': {'verbose_name': 'Small (2 col crop)',
              'width': 140, 'height': 100, 'opts': 'crop'},
    'medium': {'verbose_name': 'Medium (4 col)',
               'width': 300, 'height': '', 'opts': ''},
    'big': {'verbose_name': 'Big (6 col)',
            'width': 460, 'height': '', 'opts': ''},
    'large': {'verbose_name': 'Large (8 col)',
              'width': 680, 'height': '', 'opts': ''},
}


GRAPPELLI_INDEX_DASHBOARD = 'groundup.dashboard.CustomIndexDashboard'

GRAPPELLI_ADMIN_TITLE = "GroundUp Administration"

NEWSROOM_ARTICLE_COPYRIGHT = '&copy; ' + str(datetime.date.today().year) + \
                             ' GroundUp. <a rel="license" href="http://creativecommons.org/licenses/by-nd/4.0/"><img alt="Creative Commons License" style="border-width:0" src="https://i.creativecommons.org/l/by-nd/4.0/80x15.png" /></a><br />This article is licensed under a <a rel="license" href="http://creativecommons.ormodifiedg/licenses/by-nd/4.0/">Creative Commons Attribution-NoDerivatives 4.0 International License</a>.<p>You may republish this article, so long as you credit the authors and GroundUp, and do not change the text. Please include a link back to the original article.</p>'

# HAYSTACK_CONNECTIONS = {
#     'default': {
#         'ENGINE': 'haystack.backends.whoosh_backend.WhooshEngine',
#         'PATH': os.path.join(os.path.dirname(__file__), 'whoosh_index'),
#     },
# }

HAYSTACK_CONNECTIONS = {
    'default': {
        'ENGINE': 'haystack.backends.simple_backend.SimpleEngine',
    },
}

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '%(levelname)s %(asctime)s %(module)s %(process)d %(thread)d %(message)s'
        },
        'simple': {
            'format': '%(levelname)s %(message)s'
        },
    },
    'handlers': {
        'file': {
            'level': 'WARNING',
            'class': 'logging.FileHandler',
            'filename': local_settings.ERROR_LOG_FILE,
            'formatter': 'verbose'
        },
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'mail_admins', ],
            'propagate': True,
            'level': 'WARNING',
        },
    }
}

# DEPRECATED BUT CODE MUST BE REMOVED FROM VIEW FIRST
advert_code_file_1 = open(os.path.join(BASE_DIR,
                                     "newsroom/templates/newsroom/advert_1.html"),
                        "r")
NEWSROOM_ADVERT_CODE_1 = advert_code_file_1.read()
advert_code_file_2 = open(os.path.join(BASE_DIR,
                                     "newsroom/templates/newsroom/advert_2.html"),
                        "r")
NEWSROOM_ADVERT_CODE_2 = advert_code_file_2.read()

DONATE_PAGE = "/donate/"
#############

NEWSROOM_ADVERT_CODE = open(os.path.join(BASE_DIR,
                                     "newsroom/templates/newsroom/advert.html"),
                            "r").read()

from .local_settings import *

if DEBUG == True:
    INSTALLED_APPS = INSTALLED_APPS + ('debug_toolbar',)
    MIDDLEWARE_CLASSES = MIDDLEWARE_CLASSES + \
                         ('debug_toolbar.middleware.DebugToolbarMiddleware',)
